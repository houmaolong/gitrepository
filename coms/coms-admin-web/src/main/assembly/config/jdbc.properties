#jdbc type adapter [mysql/oracle]
#jdbc.type=mysql
#jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.12.12.52:1521:dasc 
#jdbc.username=ndmpdev1
#jdbc.password=ndmpdev1



#jdbc.url=jdbc:oracle:thin:@10.1.3.194:1521:dasc 
#jdbc.username=ndmp3
#jdbc.password=ndmp3


#jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.driverClassName=net.sourceforge.jtds.jdbc.Driver
jdbc.url=jdbc:jtds:sqlserver://192.168.1.250/YZERP68
#jdbc.driverClassName=com.microsoft.jdbc.sqlserver.SQLServerDriver
#jdbc.url=jdbc:microsoft:sqlserver://192.168.1.250:1433;DatabaseName=YZERP68
#jdbc.url=jdbc:mysql://10.1.26.16:3306/webbase?characterEncoding=utf8&characterSetResults=utf8&useUnicode=false&rewriteBatchedStatements=true&autoReconnect=true
#jdbc.username=root
jdbc.username=sa
#jdbc.password=123456
jdbc.password=yz@2011


# Connection pool information 
# Connection pool size
cpool.initialPoolSize=10
cpool.minPoolSize=30
cpool.maxPoolSize=100

# How long to keep unused connections around(in seconds)
# Note: MySQL times out idle connections after 8 hours(28,800 seconds)
# so ensure this value is below MySQL idle timeout
cpool.maxIdleTime=7200

# Acquiring new connections is slow, so eagerly retrieve extra connections
# when current pool size is reached
cpool.acquireIncrement=10

# The JDBC standard parameters to control the number of loaded within the data source PreparedStatements.
# However, due to the the pre cache of statements belonging to a single connection rather than the entire connection pool.
# Set this parameter need to take into account a number of factors.
# If maxStatements maxStatementsPerConnection are 0, the cache is turned off. Default: 0
cpool.maxStatements=60
# C3p0 asynchronous operation, slow JDBC operations by helping process is complete.
# Expansion of these operations can improve performance through multi-threading to
# achieve multiple operations to be executed at the same time. Default: 3
cpool.numHelperThreads=10
# Set up a connection in the pool the longest time, if the time is exceeded, will be removed from the pool, in seconds
cpool.maxConnectionAge=60
# This defines the maximum number of cached statements connection pool owned by a single connection. Default: 0
cpool.maxStatementsPerConnection=30

# The idle check all connections in the pool even in seconds. Default: 0
cpool.idleConnectionTestPeriod=60
# Connection pooling seconds how long the operation on the automatic recovery, than maxIdleTime set smaller units
cpool.maxIdleTimeExcessConnections=60
# Defines the number of repeated attempts failed to get a new connection from the database.
# Default: 30 (less than 0 for unlimited)
cpool.acquireRetryAttempts=30
# Get a connection failure will cause all waiting for the connection pool to get the connection thread throws an exception
# But the data source is still a valid reservation and the next call to getConnection () to continue to try to get a connection
# If true, then try to get a connection failure, the data source will affirm disconnected and permanently closed.
# the default value: false
cpool.breakAfterAcquireFailure=false
# Connected twice in the interval, in milliseconds. Default: 1000
cpool.acquireRetryDelay=1000

cpool.testConnectionOnCheckout=false
cpool.testConnectionOnCheckin=true
cpool.autoCommitOnClose=true


# Time to wait for an open connection before timing out
# (in milliseconds)
cpool.checkoutTimeout=5000
cpool.automaticTestTable=test